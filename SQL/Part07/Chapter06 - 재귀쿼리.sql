CREATE TABLE TB_EMP_RECURSIVE_TEST (
	EMPLOYEE_ID SERIAL PRIMARY KEY,
	FULL_NAME VARCHAR NOT NULL,
	MANAGER_ID INT
)
;
-- EMPLOYEE_ID 컬럼이 있고,
-- MANAGER_ID 커럶은 각 사원의 상위 관지자이다.
-- 해당 테이블을 가지고 조직도를 그릴 수 있다.

INSERT INTO TB_EMP_RECURSIVE_TEST (
	EMPLOYEE_ID, FULL_NAME, MANAGER_ID
)
VALUES
	(1, '이경오', NULL),
	(2, '김한이', 1),
	(3, '김승범', 1),
	(4, '하선주', 1),
	(5, '송백선', 1),
	(6, '이슬이', 2),
	(7, '홍발순', 2),
	(8, '김미순', 2),
	(9, '김선태', 2),
	(10, '이선형', 3),
	(11, '김선미', 3),
	(12, '김선훈', 3),
	(13, '이왕준', 3),
	(15, '김사원', 4),
	(14, '이시원', 4),
	(16, '최선영', 7),
	(17, '박태후', 7),
	(18, '최민준', 8),
	(19, '정택헌', 8),
	(20, '노가람', 8)
;

COMMIT;

--
WITH RECURSIVE TMP1 AS(
SELECT
	EMPLOYEE_ID,
	MANAGER_ID,
	FULL_NAME,
	0 LVL
FROM
	TB_EMP_RECURSIVE_TEST
WHERE
	MANAGER_ID IS NULL
UNION
SELECT
	E.EMPLOYEE_ID,
	E.MANAGER_ID,
	E.FULL_NAME,
	S.LVL + 1
FROM
	TB_EMP_RECURSIVE_TEST E,
	TMP1 S
WHERE
	S.EMPLOYEE_ID = E.MANAGER_ID
)
SELECT EMPLOYEE_ID, MANAGER_ID, LPAD(' ', 4 * (LVL)) || FULL_NAME AS FULL_NAME
FROM TMP1
;

WITH RECURSIVE TMP1 AS(
SELECT
	EMPLOYEE_ID,
	MANAGER_ID,
	FULL_NAME,
	0 AS LVL
FROM
	TB_EMP_RECURSIVE_TEST
WHERE
	EMPLOYEE_ID = 2
UNION
SELECT
	M.EMPLOYEE_ID,
	M.MANAGER_ID,
	M.FULL_NAME,
	S.LVL + 1
FROM
	TB_EMP_RECURSIVE_TEST M,
	TMP1 S
WHERE
	S.EMPLOYEE_ID = M.MANAGER_ID
)
SELECT
	EMPLOYEE_ID, MANAGER_ID, LPAD(' ', 4 * (LVL)) || FULL_NAME AS FULL_NAME
FROM
	TMP1
;