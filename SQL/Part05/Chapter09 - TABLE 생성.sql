--
CREATE TABLE ACCOUNT
(
	USER_ID SERIAL PRIMARY KEY,
	USERNAME VARCHAR(50) UNIQUE NOT NULL,
	PASSWORD VARCHAR(50) NOT NULL,
	EMAIL VARCHAR(355) UNIQUE NOT NULL,
	CREATED_ON TIMESTAMP NOT NULL,
	LAST_LOGIN TIMESTAMP
)
;

CREATE TABLE ROLE
(
	ROLE_ID SERIAL PRIMARY KEY,
	ROLE_NAME VARCHAR(255) UNIQUE NOT NULL 
)
;

CREATE TABLE ACCOUNT_ROLE
(
	USER_ID INTEGER NOT NULL,
	ROLE_ID INTEGER NOT NULL,
	GRANT_DATE TIMESTAMP WITHOUT TIME ZONE,
	PRIMARY KEY (USER_ID, ROLE_ID),
	CONSTRAINT ACCOUNT_ROLE_ROLE_ID_FKEY FOREIGN KEY (ROLE_ID)
	REFERENCES ROLE(ROLE_ID) MATCH SIMPLE
	ON UPDATE NO ACTION ON DELETE NO ACTION,
	CONSTRAINT ACCOUNT_ROLE_USER_ID_FKEY FOREIGN KEY (USER_ID)
	REFERENCES ACCOUNT (USER_ID) MATCH SIMPLE ON
	UPDATE NO ACTION ON DELETE NO ACTION
)
;

--
INSERT INTO ACCOUNT VALUES(1, 'KSH', '1234', 'DBMSEXPERT@NAVER.COM', CURRENT_TIMESTAMP, NULL);

COMMIT;

SELECT * FROM ACCOUNT;

--
INSERT INTO ROLE VALUES(1, 'DBA');

COMMIT;

SELECT * FROM ROLE;

--
INSERT INTO ACCOUNT_ROLE VALUES(1, 1, CURRENT_TIMESTAMP);

COMMIT;

SELECT * FROM ACCOUNT_ROLE;

--
INSERT INTO ACCOUNT_ROLE VALUES(2, 1, CURRENT_TIMESTAMP); -- 제약 조건 위배
INSERT INTO ACCOUNT_ROLE VALUES(1, 2, CURRENT_TIMESTAMP); -- 제약 조건 위배
INSERT INTO ACCOUNT_ROLE VALUES(1, 1, CURRENT_TIMESTAMP); -- 이미 존재

--
UPDATE
	ACCOUNT
SET
	USER_ID = 2
WHERE 
	USER_ID = 1
; -- 참조키 제약 조건

DELETE
FROM 
	ACCOUNT
; -- 참조키 제약 조건