SELECT 
	*
FROM
	BASKET_A 
;

SELECT
	*
FROM
	BASKET_B
;

SELECT
	A.ID ID_A,
	A.FRUIT FRUIT_A,
	B.ID ID_B,
	B.FRUIT FRUIT_B
FROM
	BASKET_A A
FULL OUTER JOIN	BASKET_B B
ON	A.FRUIT = B.FRUIT
;

-- ONLY OUTER JOIN
SELECT
	A.ID ID_A,
	A.FRUIT FRUIT_A,
	B.ID ID_B,
	B.FRUIT FRUIT_B
FROM
	BASKET_A A
FULL OUTER JOIN BASKET_B B
ON A.FRUIT = B.FRUIT
WHERE A.ID IS NULL
OR B.ID IS NULL
;

-- 실습 준비
CREATE TABLE
IF NOT EXISTS DEPARTMENTS
(
	DEPARTMENT_ID SERIAL PRIMARY KEY,
	DEPARTMENT_NAME VARCHAR (255) NOT NULL
)
;

CREATE TABLE
IF NOT EXISTS EMPLOYEES
(
	EMPLOYEE_ID SERIAL PRIMARY KEY,
	EMPLOYEE_NAME VARCHAR(255),
	DEPARTMENT_ID INTEGER
)
;

INSERT INTO	DEPARTMENTS 
(DEPARTMENT_NAME)
VALUES
	('SALES'),
	('MARKETING'),
	('HR'),
	('IT'),
	('PRODUCTION')
;

INSERT INTO EMPLOYEES
(EMPLOYEE_NAME, DEPARTMENT_ID)
VALUES
	('BETTE NICHOLSON', 1),
	('CHRISTIAN GABIE', 1),
	('JOE SWANK', 2),
	('FRED COSTNER', 3),
	('SANDRA KILMER', 4),
	('JULIA MCQUEEN', NULL)
;

SELECT * FROM DEPARTMENTS;
SELECT * FROM EMPLOYEES;

--
SELECT
	E.EMPLOYEE_NAME,
	D.DEPARTMENT_NAME99
FROM
	EMPLOYEES E
FULL OUTER JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
;

-- RIGHT ONLY
SELECT 
	E.EMPLOYEE_NAME,
	D.DEPARTMENT_NAME
FROM
	EMPLOYEES E
FULL OUTER JOIN DEPARTMENTS D 
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
WHERE
	E.EMPLOYEE_NAME IS NULL 
;

-- LEFT ONLY
SELECT
	E.EMPLOYEE_NAME,
	D.DEPARTMENT_NAME
FROM
	EMPLOYEES E
FULL OUTER JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
WHERE
	D.DEPARTMENT_NAME IS NULL
;